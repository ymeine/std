require! {
	node-path: path

	object: 'object/core'
	array: 'array/core'
}



_export = (spec) ->
	# Input processing ---------------------------------------------------------

	{
		module
		submodules
		values
		# from: _from

		# Options
		lazy
		usePathAsName
	} = spec

	# ------------------------------------------------------------------- module

	if not module? => throw Error 'No module given'

	# --------------------------------------------------------------- submodules

	submodules = switch typeof! submodules
	| 'Array' => submodules
	| 'Object' => [{path, names} for path, names of submodules]
	| _ => []

	# ------------------------------------------------------------------- values

	values = array.factory values

	# ------------------------------------------------------------------ options

	lazy ?= yes
	usePathAsName ?= yes

	# Processing ---------------------------------------------------------------

	# --------------------------------------------------------------- Submodules

	for submodule in submodules
		{
			path
			names
		} = submodule

		# ----------------------------------------------------------------- path

		if not path? => continue

		# ---------------------------------------------------------------- names

		names = array.factory names
		if usePathAsName
			names = [node-path.basename path] ++ names

		# Not lazy mode --------------------------------------------------------

		if not lazy
			value = module.require path
			object.alias value, names, module.exports, yes

		# Lazy mode ------------------------------------------------------------

		else let module, path
			descriptor = {
				get: -> module.require path
				+enumerable
			}
			for name in names => Object.defineProperty module.exports, name, descriptor


	# ------------------------------------------------------------------- Values

	for value in values
		{
			value
			names
		} = value

		# ---------------------------------------------------------------- value

		if not value? => continue
		# if _from? => value = _from.value

		# ---------------------------------------------------------------- names

		names = array.factory names

		# Processing -----------------------------------------------------------

		object.alias value, names, module.exports, yes





export {
	export: _export
}
