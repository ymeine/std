require! {
	'tester'
	object: './'
}

{Logger} = tester.logger
$logger = Logger!



# Override ---------------------------------------------------------------------

$logger.separator 'Override'
$logger.on!

original = {'originalOnly', 'both'}
override = {'overrideOnly', both: 'bothOverriden'}

$logger.log (original), 'Original: '
$logger.log (override), 'Override: '
$logger.log (object.override original, override), 'Returned: '
$logger.log (original), 'Original overriden: '

# Default ----------------------------------------------------------------------

$logger.separator '''Default FIXME Don't use header of logs this way'''
$logger.on!

original = {'orignalOnly' inBoth: 'original'}
_default = {'defaultOnly', inBoth: 'default'}

$logger.log (original), 'Original: '
$logger.log (_default), 'Default: '
$logger.log (object.default original, _default), 'Returned: '
$logger.log (original), 'Original processed: '

# Factory ----------------------------------------------------------------------

$logger.separator 'Factory'
$logger.on!

$logger.log object.factory {'object'}
$logger.log object.factory 'noKey'
$logger.log object.factory 'value' 'key'
