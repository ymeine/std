require! {
	'packager'

	'./core'
}



packager.export {
	module

	desc: '''

	'''

	values: [
		{
			value: core.split
			names: <[
				split
				divide
			]>
			api:
				desc: '''
					Divides the given array into a list of arrays having the given desired length.

					The last one might not have a length of the given chunk size, depending on the rest of the division.
				'''
				args: {
					'chunkSize': {
						+required
						+'in'
						desc: '''
							The desired length of the resulting arrays.

							It must be strictly positive.

							If it's greater than the length of the given array, it is considered to be equal to it.
						'''
						type: {
							+strict
							class: 'Number'
						}
					}
					'array': {
						+required
						+'in'
						desc: '''
							The array to process (split, divide).
						'''
						type: {
							-strict
							+collection
							class: 'Array'
							content: {-strict}
						}
					}
				}
				returns: {
					desc: '''
						The list of arrays.
					'''
				}
				backlog: [
					'''Be able to choose which part is going to take the remaining items (last as currently or first)'''
				]
		}



		{
			value: core.removeAt
			names: <[
				removeAt
				removeat
				remAt
				remat
				rmat
				deleteAt
				deleteat
				delAt
				delat
			]>
			api:
				desc: '''
					Removes from the given array the item located at the specified index.
				'''
				args: {
					'array': {
						+required
						+'out'
						desc: '''
							The array to process.
						'''
						type: {
							-strict
							+collection
							class: 'Array'
							content: {-strict}
						}
					}
					'index': {
						+required
						+'in'
						desc: '''
							The index of the element to remove. For specifications about it, please refer to the native `Array.prototype.slice` method it uses behind.
						'''
						type: {
							-strict
							class: 'Number'
						}
					}
				}
				returns: {
					type: 'arg'
					ref: 'array'
				}
		}



		{
			value: core.remove
			names: <[
				remove
				removeItem
				removeitem
				rem
				rm
				delete
				del
			]>
			api:
				desc: '''
					Removes from the given array the given item.
				'''
				args: {
					'array': {
						+required
						+'out'
						desc: '''
							The array to process.
						'''
						type: {
							-strict
							+collection
							class: 'Array'
							content: {-strict}
						}
					}
					'element': {
						+required
						+'in'
						desc: '''
							The element to remove.
						'''
					}
				}
				returns: {
					type: 'arg'
					ref: 'array'
				}
				see: [
					'Array.prototype.slice'
					'removeAt'
				]
		}



		{
			value: core.factory
			names: <[
				factory
			]>
			api:
				desc: '''
					Builds an array from the given input.
				'''
				returns: '''A new array'''
		}



		{
			value: core.sortBy
			names: <[
				sortBy
				sortby
				sort
			]>
		}



		{
			value: core.transform
			names: <[
				transform
				map
			]>
		}
	]
}
