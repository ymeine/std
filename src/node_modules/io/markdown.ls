require! {
	'./renderer'
}

{Renderer} = renderer



class Markdown extends Renderer
	~>
		@emphaseChar = '_'
		@italicX = 1
		@boldX = 2

	section: (title, level = 1) ->
		prefix = '#' * level
		"#prefix #title"

	list-item: (item, level = 1) ->
		prefix = '\t' * (level - 1)
		prefix += '*'
		"#prefix #item"

	url: (url, text = url, title) ->
		# URL Encoding
		/*
		 * This is how Markdown SEEMS to handle urls.
		 *
		 * The problem: I put urls inside parentheses, interpreted by markdown.
		 *
		 * The url itself can contain raw (not encoded) parentheses, conflicting with that in some cases.
		 *
		 * However, Markdown seems to count the opening and closing parentheses before detecting the one closing the url container.
		 *
		 * I'll do the same, and for each encountered parenthesis which would close the container, I'll encode it.
		 */
		opening = 0
		encoded = for char in url
			switch char
			| '(' => opening++
			| ')' => opening--
			if opening < 0
				char = '%29' # It can only be a ')'
				opening++
			char
		encoded .= join ''

		# Title - no need to escape apparently
		# if title? => title = string.escape title, '"'

		"[#{string.escape text, '[]'}](#encoded#{if title? => " \"#title\"" else ''})"





export Markdown
